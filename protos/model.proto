syntax = "proto2";

import "protos/fast_rcnn.proto";
import "protos/rnn.proto";
import "protos/hyperparams.proto";

message Model {
  extensions 1000 to max;
}

enum TextFeature {
  ANSWER_ONLY = 0;
  QUESTION_AND_ANSWER = 1;
}

message VCRBiLSTMFuse {
  extend Model {
    optional VCRBiLSTMFuse ext = 1000;
  }
  optional string vocab_file = 1;
  optional uint32 vocab_size = 2;
  optional uint32 unk_token_id = 3 [default = 100];
  optional uint32 embedding_dims = 4 [default = 100];

  optional string glove_file = 5;
  optional uint32 lstm_units = 6 [default = 128];
  optional float lstm_dropout = 7 [default = 0];
  optional float lstm_recurrent_dropout = 8 [default = 0];

  optional TextFeature text_feature = 9 [default = QUESTION_AND_ANSWER];
}

message VCRBiLSTMConcat {
  extend Model {
    optional VCRBiLSTMConcat ext = 1001;
  }
  optional string vocab_file = 1;
  optional uint32 vocab_size = 2;
  optional uint32 unk_token_id = 3 [default = 100];
  optional uint32 embedding_dims = 4 [default = 100];

  optional string glove_file = 5;
  optional uint32 lstm_units = 6 [default = 128];
  optional float lstm_dropout = 7 [default = 0];
  optional float lstm_recurrent_dropout = 8 [default = 0];

  optional TextFeature text_feature = 9 [default = QUESTION_AND_ANSWER];
}

message VCRBert {
  extend Model {
    optional VCRBert ext = 1002;
  }

  optional string bert_config_file = 1;
  optional string bert_vocab_file = 2;
  optional string bert_checkpoint_file = 3;
  optional uint32 bert_unk_token_id = 4 [default = 100];

  optional bool bert_finetune_all = 5 [default = false];
  repeated string bert_finetune_layers = 6;
}

message VCRBiLSTMGloVe {
  extend Model {
    optional VCRBiLSTMGloVe ext = 1003;
  }
  optional string vocab_file = 1;

  optional string glove_file = 5;
  
  optional uint32 unk_token_id = 3 [default = 100];

  optional RNN rnn_config = 6;
}

message VCRViBiLSTMGloVe {
  extend Model {
    optional VCRViBiLSTMGloVe ext = 1006;
  }
  optional string vocab_file = 1;

  optional string glove_file = 5;
  
  optional uint32 unk_token_id = 3 [default = 100];

  optional RNN rnn_config = 6;
}

message VCRBiLSTMBert {
  extend Model {
    optional VCRBiLSTMBert ext = 1004;
  }
  optional string bert_config_file = 1;
  optional string bert_vocab_file = 2;
  optional string bert_checkpoint_file = 3;
  optional uint32 bert_unk_token_id = 4 [default = 100];

  optional uint32 lstm_units = 5 [default = 128];
  optional float lstm_dropout = 6 [default = 0];
  optional float lstm_recurrent_dropout = 7 [default = 0];

  optional bool bert_finetune_all = 8 [default = false];
  repeated string bert_finetune_layers = 9;
}

message VCRVBert {
  extend Model {
    optional VCRVBert ext = 1005;
  }

  optional string bert_config_file = 1;
  optional string bert_vocab_file = 2;
  optional string bert_checkpoint_file = 3;
  optional uint32 bert_unk_token_id = 4 [default = 100];

  optional bool bert_finetune_all = 5 [default = false];
  repeated string bert_finetune_layers = 6;

  optional FastRCNN fast_rcnn_config = 7;
}

// Embedding config.
message Embedding {
  oneof embedding_oneof {
    GloVeEmbedding glove_embedding = 1;
    BertEmbedding bert_embedding = 2;
  }
}

// GloVe embedding config.
message GloVeEmbedding {
  // Path to the vocabulary file.
  optional string vocab_file = 1;

  // Path to the pre-trained GloVe embedding file.
  optional string glove_file = 5;

  // Id of the UNK token. 
  optional uint32 unk_token_id = 3 [default = 100];
}

// Bert embedding config.
message BertEmbedding {
}

message VCRR2C {
  extend Model {
    optional VCRR2C ext = 1007;
  }

  // Word embedding config.
  optional Embedding embedding_config = 1;

  // RNN config.
  optional RNN rnn_config = 6;
}


message VCRR2CGrounding {
  extend Model {
    optional VCRR2CGrounding ext = 1008;
  }

  // Word embedding config.
  optional Embedding embedding_config = 1;

  // RNN config.
  optional RNN rnn_config = 6;
}

message R2CGlove {
  extend Model {
    optional R2CGlove ext = 1009;
  }

  // Path to the vocabulary file.
  optional string vocab_file = 1;

  // Path to the pre-trained GloVe embedding file.
  optional string glove_file = 2;

  // Id of the UNK token. 
  optional uint32 unk_token_id = 3 [default = 100];

  // RNN config.
  optional RNN rnn_config = 4;

  // If true, do not add visual features.
  optional bool no_vision_representation = 5 [default = false];
}

message R2CBert{
  extend Model {
    optional R2CBert ext = 1010;
  }

  // RNN config.
  optional RNN rnn_config = 1;

  // If true, do not add visual features.
  optional bool no_vision_representation = 2 [default = false];

  optional int32 visual_feature_dims = 3 [default = 512];

  optional bool pool_sequence_features = 4 [default = false];

  optional string label_file = 5;

  optional int32 label_vocab_size = 6 [default = 80];

  optional int32 label_embedding_dims = 7 [default = 300];

  optional Hyperparams hyperparams = 8;
}

message R2CVilBert{
  extend Model {
    optional R2CVilBert ext = 1011;
  }

  // RNN config.
  optional RNN rnn_config = 1;

  optional FastRCNN fast_rcnn_config = 9;

  // If true, do not add visual features.
  optional bool no_vision_representation = 2 [default = false];

  optional int32 visual_feature_dims = 3 [default = 512];

  optional bool pool_sequence_features = 4 [default = false];

  optional string label_file = 5;

  optional int32 label_vocab_size = 6 [default = 80];

  optional int32 label_embedding_dims = 7 [default = 300];

  optional Hyperparams hyperparams = 8;

  optional int32 max_num_objects = 10 [default = 10];
}
